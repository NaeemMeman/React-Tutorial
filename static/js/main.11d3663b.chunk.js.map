{"version":3,"sources":["index.js"],"names":["Board","i","winningSquare","this","props","winner","includes","Square","value","squares","onClick","boardSquares","col","boardRow","row","push","key","renderSquare","className","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","moveOrder","slice","current","length","calculateWinner","setState","concat","Math","floor","step","status","tie","calculateTie","moves","map","move","moveKey","temp","desc","jumpTo","toggle","reverseMoveOrder","handleClick","winningSquares","style","backgroundColor","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"2PAIMA,G,iLACSC,GAAI,IAAD,OACbC,KAAgBC,KAAKC,MAAMC,SAAUF,KAAKC,MAAMC,OAAOC,SAASL,IACjE,OACH,kBAACM,EAAD,CACAC,MAAOL,KAAKC,MAAMK,QAAQR,GAC1BS,QAAS,kBAAM,EAAKN,MAAMM,QAAQT,IAClCC,cAAiBA,M,+BAOf,IADA,IAAIS,EAAe,GACVC,EAAM,EAAGA,EAAM,EAAGA,IAAO,CAEjC,IADA,IAAIC,EAAW,GACNC,EAAM,EAAGA,EAAM,EAAGA,IAC1BD,EAASE,KAAK,0BAAMC,IAAU,EAAJJ,EAAOE,GAAnB,IAA0BX,KAAKc,aAAkB,EAAJL,EAAOE,GAApD,MAEfH,EAAaI,KAAK,yBAAKG,UAAU,YAAYF,IAAKJ,GAAMC,IAGzD,OACD,6BACEF,O,GAxBgBQ,IAAMC,YA8BpBC,E,kDACJ,WAAYjB,GAAQ,IAAD,8BAClB,cAAMA,IACDkB,MAAQ,CACZC,QAAS,CAAC,CACTd,QAASe,MAAM,GAAGC,KAAK,MACvBb,IAAK,KACLE,IAAK,OAENY,WAAY,EACZC,SAAS,EACTC,WAAW,GAVM,E,wDAcP3B,GACX,IAAMsB,EAAUpB,KAAKmB,MAAMC,QAAQM,MAAM,EAAG1B,KAAKmB,MAAMI,WAAa,GAC9DI,EAAUP,EAAQA,EAAQQ,OAAS,GACnCtB,EAAWqB,EAAQrB,QAAQoB,QACrBC,EAAQlB,IACRkB,EAAQhB,IAEhBkB,EAAgBvB,IAAYA,EAAQR,KAGxCQ,EAAQR,GAAKE,KAAKmB,MAAMK,QAAU,IAAM,IACxCxB,KAAK8B,SAAS,CACbV,QAASA,EAAQW,OAAO,CAAC,CACxBzB,QAASA,EACTG,IAAMX,EAAI,EAAK,EACfa,IAAKqB,KAAKC,MAAMnC,EAAI,GAAK,KAE1ByB,WAAYH,EAAQQ,OACpBJ,SAAUxB,KAAKmB,MAAMK,a,6BAIhBU,GACNlC,KAAK8B,SAAS,CACfP,WAAYW,EACZV,QAAUU,EAAO,GAAM,M,yCAKtBlC,KAAK8B,SAAS,CACbL,WAAYzB,KAAKmB,MAAMM,c,+BAIf,IA8BPU,EA9BM,OACJf,EAAUpB,KAAKmB,MAAMC,QACrBO,EAAUP,EAAQpB,KAAKmB,MAAMI,YAC7BrB,EAAS2B,EAAgBF,EAAQrB,SACjC8B,EAqGP,SAAsB9B,GACrB,IAAK,IAAIR,EAAI,EAAGA,EAAI,EAAGA,IACtB,IAAKQ,EAAQR,GACZ,OAAO,EAGT,OAAO,EA3GKuC,CAAaV,EAAQrB,SAC3BmB,EAAYzB,KAAKmB,MAAMM,UAEvBa,EAAQlB,EAAQmB,KAAI,SAACL,EAAMM,GAChC,IAAIC,EAOEC,GALLD,EADGhB,EACOe,EAECpB,EAAQQ,OAAS,EAAKY,GAIjC,eAAiBC,EAAU,KAAKrB,EAAQqB,GAAShC,IAAI,KAAKW,EAAQqB,GAAS9B,IAAI,IAC/E,mBAEKgC,EAAQF,IAAY,EAAKtB,MAAMI,WACpC,gCAASmB,GACTA,EAED,OACA,wBAAI7B,IAAK4B,GACR,4BAAQlC,QAAS,kBAAM,EAAKqC,OAAOH,KAAWE,OAO/CR,EADGjC,EACM,WAAaA,EAAOA,OAEpBkC,EACT,qBACA,iBAAmBpC,KAAKmB,MAAMK,QAAU,IAAM,KAG/C,IAAMqB,EAAS,4BAAQtC,QAAS,kBAAM,EAAKuC,qBAA5B,qBAGZ,OACE,yBAAK/B,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAClB,EAAD,CACPS,QAASqB,EAAQrB,QACjBC,QAAS,SAACT,GAAD,OAAO,EAAKiD,YAAYjD,IACjCI,OAAQA,GAAUA,EAAO8C,kBAGpB,yBAAKjC,UAAU,aACb,6BAAMoB,GACZ,6BAAMU,GACA,4BAAKP,S,GAxGItB,IAAMC,WAsHzB,SAASb,EAAOH,GAKf,OACC,4BAAQc,UAAU,SAASR,QAASN,EAAMM,QAAS0C,MAAOhD,EAAMF,cALtC,CACxBmD,gBAAiB,QAIkF,MACnGjD,EAAMI,OAMV,SAASwB,EAAgBvB,GAYxB,IAXA,IAAM6C,EAAQ,CACb,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGGrD,EAAI,EAAGA,EAAIqD,EAAMvB,OAAQ9B,IAAK,CAAC,IAAD,cACpBqD,EAAMrD,GADc,GAC/BsD,EAD+B,KAC5BC,EAD4B,KACzBC,EADyB,KAEtC,GAAIhD,EAAQ8C,IAAM9C,EAAQ8C,KAAO9C,EAAQ+C,IAAM/C,EAAQ8C,KAAO9C,EAAQgD,GACrE,MAAO,CACNpD,OAAQI,EAAQ8C,GAChBJ,eAAgBG,EAAMrD,IAIzB,OAAO,KAvCRyD,IAASC,OACP,kBAACtC,EAAD,MACAuC,SAASC,eAAe,W","file":"static/js/main.11d3663b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n\tlet winningSquare = this.props.winner && this.props.winner.includes(i) ? true : false;\r\n    return (\r\n\t<Square\r\n\tvalue={this.props.squares[i]} \r\n\tonClick={() => this.props.onClick(i)}\r\n\twinningSquare = {winningSquare}\r\n\t/>\r\n\t);\r\n  }\r\n\r\n  render () {\r\n\t  let boardSquares = [];\r\n\t  for (let col = 0; col < 3; col++) {\r\n\t\t  let boardRow = [];\r\n\t\t  for (let row = 0; row < 3; row++) {\r\n\t\t\t  boardRow.push(<span key={(col*3)+row}> {this.renderSquare((col*3)+row)} </span>)\r\n\t\t  }\r\n\t\t  boardSquares.push(<div className=\"board-row\" key={col}>{boardRow}</div>)\r\n\t  }\r\n\t  \r\n\t  return (\r\n\t\t<div>\r\n\t\t\t{boardSquares}\r\n\t\t</div>\r\n\t  );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n\t  super(props);\r\n\t  this.state = {\r\n\t\t  history: [{\r\n\t\t\t  squares: Array(9).fill(null),\r\n\t\t\t  col: null,\r\n\t\t\t  row: null,\r\n\t\t  }],\r\n\t\t  stepNumber: 0,\r\n\t\t  xIsNext: true,\r\n\t\t  moveOrder: true,\r\n\t  };\r\n  }\r\n  \r\n  handleClick(i) {\r\n\t  const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n\t  const current = history[history.length - 1];\r\n\t  const squares =  current.squares.slice();\r\n\t  const col = current.col;\r\n\t  const row = current.row;\r\n\t  \r\n\t  if (calculateWinner(squares) || squares[i]) {\r\n\t\t  return;\r\n\t  }\r\n\t  squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n\t  this.setState({\r\n\t\t  history: history.concat([{\r\n\t\t\t  squares: squares,\r\n\t\t\t  col: (i % 3) + 1,\r\n\t\t\t  row: Math.floor(i / 3) + 1,\r\n\t\t  }]),\r\n\t\t  stepNumber: history.length,\r\n\t\t  xIsNext: !this.state.xIsNext,\r\n\t  });\r\n  }\r\n  \r\n  jumpTo(step) {\r\n\t  this.setState({\r\n\t\tstepNumber: step,\r\n\t\txIsNext: (step % 2) == 0,\r\n\t  });\r\n  }\r\n  \r\n  reverseMoveOrder() {\r\n\t  this.setState({\r\n\t\t  moveOrder: !this.state.moveOrder,\r\n\t  });\r\n  }\r\n  \r\n  render() {\r\n\tconst history = this.state.history;\r\n\tconst current = history[this.state.stepNumber];\r\n\tconst winner = calculateWinner(current.squares);\r\n\tconst tie = calculateTie(current.squares);\r\n\tconst moveOrder = this.state.moveOrder;\r\n\t\r\n\tconst moves = history.map((step, move) => {\r\n\t\tlet moveKey;\r\n\t\tif (moveOrder) {\r\n\t\t\tmoveKey = move;\r\n\t\t} else {\r\n\t\t\tmoveKey = (history.length - 1) - move;\r\n\t\t}\r\n\t\t\r\n\t\tconst temp = moveKey ?\r\n\t\t\t'Go to move #' + moveKey + ' ('+history[moveKey].col+', '+history[moveKey].row+')':\r\n\t\t\t'Go to game start';\r\n\t\t\t\r\n\t\tconst desc = (moveKey === this.state.stepNumber) ?\r\n\t\t\t<strong>{temp}</strong> :\r\n\t\t\ttemp;\r\n\t\t\r\n\t\treturn (\r\n\t\t<li key={moveKey}>\r\n\t\t\t<button onClick={() => this.jumpTo(moveKey)}>{desc}</button>\r\n\t\t</li>\r\n\t\t);\r\n\t});\r\n\t\r\n\tlet status;\r\n\tif (winner) {\r\n\t\tstatus = 'Winner: ' + winner.winner;\r\n\t} else {\r\n\t\tstatus = tie ?\r\n\t\t'The game is a draw':\r\n\t\t'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n\t}\r\n\t\r\n\tconst toggle = <button onClick={() => this.reverseMoveOrder()}>Change Move Order</button>;\r\n\t\r\n\t\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n\t\t\tsquares={current.squares}\r\n\t\t\tonClick={(i) => this.handleClick(i)}\r\n\t\t\twinner={winner && winner.winningSquares}\r\n\t\t  />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n\t\t  <div>{toggle}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction Square(props) {\r\n\tconst winningSquareStyle = {\r\n    backgroundColor: '#ff0'\r\n  };\r\n\t\r\n\treturn (\r\n\t\t<button className=\"square\" onClick={props.onClick} style={props.winningSquare ? winningSquareStyle : null}>\r\n\t\t\t{props.value}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n\tconst lines = [\r\n\t\t[0,1,2],\r\n\t\t[3,4,5],\r\n\t\t[6,7,8],\r\n\t\t[0,3,6],\r\n\t\t[1,4,7],\r\n\t\t[2,5,8],\r\n\t\t[0,4,8],\r\n\t\t[2,4,6],\r\n\t];\r\n\t\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\t\treturn {\r\n\t\t\t\twinner: squares[a],\r\n\t\t\t\twinningSquares: lines[i],\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nfunction calculateTie(squares) {\r\n\tfor (let i = 0; i < 9; i++) {\r\n\t\tif (!squares[i]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}"],"sourceRoot":""}